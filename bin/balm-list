#!/usr/bin/env node

const logger = require('../lib/logger');
const request = require('request');
const chalk = require('chalk');

const COLOR_MAP = {
  react: 'cyanBright',
  vue: 'greenBright',
  ng: 'redBright'
};
const POP = Object.keys(COLOR_MAP);

const tagCategory = repoName => {
  let templateName = repoName.replace('template-', '');
  let result = chalk.blue(templateName);

  for (let i = 0, len = POP.length; i < len; i++) {
    let key = POP[i];
    if (new RegExp(`${key}.*`, 'i').test(templateName)) {
      result = chalk[COLOR_MAP[key]](templateName);
      break;
    }
  }

  return result;
};

/**
 * Padding.
 */

console.log();
process.on('exit', () => {
  console.log();
});

/**
 * List repos.
 */

request(
  {
    url: 'https://api.github.com/users/balmjs/repos',
    headers: {
      'User-Agent': 'balm-cli'
    }
  },
  (err, res, body) => {
    if (err) logger.fatal(err);
    const requestBody = JSON.parse(body);
    if (Array.isArray(requestBody)) {
      console.log('  Available official templates:');
      console.log();
      requestBody.filter(repo => {
        if (/^template-[a-z]{2,}/i.test(repo.name) && repo.description) {
          console.log(
            '  ' +
              chalk.yellow('â˜…') +
              '  ' +
              tagCategory(repo.name) +
              ' - ' +
              repo.description
          );
        }
      });
    } else {
      console.error(requestBody.message);
    }
  }
);
